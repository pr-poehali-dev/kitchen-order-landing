import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';

const QuizTestPage = () => {
  const [testData, setTestData] = useState<any[]>([]);

  const handleTestSubmit = async () => {
    const mockQuizData = {
      name: '–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤',
      phone: '+7 999 123-45-67',
      contactMethod: 'whatsapp',
      answers: [
        { question: 1, answer: '–£–≥–ª–æ–≤–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞' },
        { question: 2, answer: '–°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π —Å—Ç–∏–ª—å' },
        { question: 3, answer: '–ù–µ—Ç –≥–æ—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞' },
        { question: 4, answer: '2-3 –º–µ—Ç—Ä–∞' },
        { question: 5, answer: '–°–∫–∏–¥–∫–∞ 15%' }
      ]
    };

    const message = `üéØ –¢–ï–°–¢–û–í–ê–Ø –∑–∞—è–≤–∫–∞ —Å –∫–≤–∏–∑–∞!

üë§ –ò–º—è: ${mockQuizData.name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${mockQuizData.phone}
üìû –°–ø–æ—Å–æ–± —Å–≤—è–∑–∏: ${mockQuizData.contactMethod === 'phone' ? '–¢–µ–ª–µ—Ñ–æ–Ω' : 'WhatsApp'}

üìã –û—Ç–≤–µ—Ç—ã –∫–≤–∏–∑–∞:
${mockQuizData.answers.map((answer, index) => 
  `${index + 1}. ${answer.answer}`
).join('\n')}

üìÖ –î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`;

    try {
      await navigator.clipboard.writeText(message);
      alert('‚úÖ –¢–ï–°–¢–û–í–´–ï –¥–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä!\n\nüìã –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –±–æ—Ç—É @voodi_leads_bot –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö
      setTestData(prev => [...prev, {
        timestamp: new Date().toLocaleString('ru-RU'),
        data: mockQuizData,
        message: message
      }]);
    } catch (error) {
      console.log('üìã –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï:');
      console.log(message);
      alert('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤—ã–≤–µ–¥–µ–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª—å (F12)');
    }
  };

  const clearTestData = () => {
    setTestData([]);
    localStorage.removeItem('kitchenQuizData');
    alert('üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
  };

  const loadRealData = () => {
    const realData = JSON.parse(localStorage.getItem('kitchenQuizData') || '[]');
    if (realData.length > 0) {
      setTestData(realData.map(item => ({
        timestamp: new Date(item.timestamp).toLocaleString('ru-RU'),
        data: {
          name: item.contact.name,
          phone: item.contact.phone,
          contactMethod: item.contact.contactMethod,
          answers: item.answers
        },
        message: `–†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç ${new Date(item.timestamp).toLocaleString('ru-RU')}`
      })));
      alert(`üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${realData.length} —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞—è–≤–æ–∫`);
    } else {
      alert('üì≠ –†–µ–∞–ª—å–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç');
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-4">
      <div className="max-w-4xl mx-auto">
        <Card className="p-6 mb-6">
          <h1 className="text-2xl font-bold mb-4">üß™ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–≤–∏–∑–∞</h1>
          
          <div className="flex gap-4 mb-6">
            <Button onClick={handleTestSubmit} className="bg-blue-600 hover:bg-blue-700">
              üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            </Button>
            <Button onClick={loadRealData} variant="outline">
              üìä –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞—è–≤–∫–∏
            </Button>
            <Button onClick={clearTestData} variant="outline" className="text-red-600">
              üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
            </Button>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg mb-4">
            <h3 className="font-semibold text-yellow-800 mb-2">üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h3>
            <ol className="text-sm text-yellow-700 space-y-1">
              <li>1. –ù–∞–∂–º–∏—Ç–µ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"</li>
              <li>2. –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä—É—é—Ç—Å—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞</li>
              <li>3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –±–æ—Ç—É @voodi_leads_bot –≤ Telegram</li>
              <li>4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∏—à–ª–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ</li>
            </ol>
          </div>
        </Card>

        {testData.length > 0 && (
          <Card className="p-6">
            <h2 className="text-xl font-semibold mb-4">üìã –ò—Å—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–æ–∫ ({testData.length})</h2>
            
            <div className="space-y-4">
              {testData.map((item, index) => (
                <div key={index} className="border rounded-lg p-4 bg-white">
                  <div className="flex justify-between items-start mb-2">
                    <span className="text-sm text-gray-500">#{index + 1}</span>
                    <span className="text-sm text-gray-500">{item.timestamp}</span>
                  </div>
                  
                  <div className="mb-2">
                    <strong>–ò–º—è:</strong> {item.data.name}<br/>
                    <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {item.data.phone}<br/>
                    <strong>–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏:</strong> {item.data.contactMethod}
                  </div>
                  
                  <details className="text-sm">
                    <summary className="cursor-pointer text-blue-600 hover:text-blue-800">
                      üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    </summary>
                    <pre className="mt-2 bg-gray-50 p-2 rounded text-xs overflow-auto">
                      {item.message}
                    </pre>
                  </details>
                </div>
              ))}
            </div>
          </Card>
        )}
      </div>
    </div>
  );
};

export default QuizTestPage;